name: Rust Build / Unit Test / Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rag-toolchain
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Try restore cache
        uses: actions/cache/restore@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/
            rag-toolchain/target/            
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Build project
        run: cargo build --all-targets --all-features --workspace

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      
      - name: Save cargo cache
        uses: actions/cache/save@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/
            rag-toolchain/target/            
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

  unit-test:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rag-toolchain
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Restore cargo cache
        uses: actions/cache/restore@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/
            rag-toolchain/target/            
          key: ${{ runner.os }}-cargo-${{ hashFiles('**Cargo.lock') }} 

      - name: set up rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Generate code coverage
        run: cargo llvm-cov --lib --lcov --output-path unitlcov.info

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: unitlcov
          path: rag-toolchain/*.info

  integration-test:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rag-toolchain
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Restore cargo cache
        uses: actions/cache/restore@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/
            rag-toolchain/target/            
          key: ${{ runner.os }}-cargo-${{ hashFiles('**Cargo.lock') }} 
      
      - name: set up rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Generate code coverage
        run: cargo llvm-cov --test mod --lcov --output-path integrationlcov.info

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: integrationlcov
          path: rag-toolchain/*.info

  lint:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rag-toolchain
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      
      - name: Restore cargo cache
        uses: actions/cache/restore@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/
            rag-toolchain/target/            
          key: ${{ runner.os }}-cargo-${{ hashFiles('**Cargo.lock') }} 

      - name: set up rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Run linter
        run: |
          cargo fmt -- --check
          cargo clippy -- -D warnings

  doc-test:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rag-toolchain
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Restore cargo cache
        uses: actions/cache/restore@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/
            rag-toolchain/target/            
          key: ${{ runner.os }}-cargo-${{ hashFiles('**Cargo.lock') }} 

      - name: set up rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Run doc tests
        run: cargo test --doc

  coverage:
    needs:
      - unit-test
      - integration-test
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: Download unit test artifacts
        uses: actions/download-artifact@v4
        with:
          name: unitlcov

      - name: Download integration coverage artifacts
        uses: actions/download-artifact@v4
        with:
          name: integrationlcov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: unitlcov.info,integrationlcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
