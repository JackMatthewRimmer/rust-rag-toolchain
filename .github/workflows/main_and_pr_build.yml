name: Rust Build / Unit Test / Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rag-toolchain
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: set up rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build project
        run: cargo build --verbose

  unit-test:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rag-toolchain
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: set up rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Run tests
        run: cargo test --lib --verbose

  integration-test:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rag-toolchain
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: set up rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Run integration tests
        run: cargo test --test mod --verbose

  lint:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rag-toolchain
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: set up rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Run linter
        run: |
          cargo fmt -- --check
          cargo clippy -- -D warnings

  doc-test:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rag-toolchain
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: set up rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Run doc tests
        run: cargo test --doc --verbose

  coverage:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: rustup update stable
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: lcov.info
          fail_ci_if_error: true
